<!DOCTYPE html>
<html lang="es-pe">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" type="image/x-icon" href="~/img/IDAT/favicon.ico">
    <title>Portal de Empleabilidad: UTP - @ViewBag.Title</title>
    @*@Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")
        <link href="~/Content/animate.css" rel="stylesheet" />
        <link href="~/Content/font-awesome.css" rel="stylesheet" />*@




    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="~/Content/animate.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <script src="~/Scripts/jsEmpresa.js"></script>
    <!--Estilo para el datepicker con jquery-->






    <style>
    .Boton_pestana {
    border-radius: 10px 10px 0px 0px;
    width: 80px;
    margin: 0px 0px 0px 2px;
    border-bottom: 0px;
    padding: 2px 1px 2px 1px;
    font-size: 12px;
    }
@Html.Raw("@")media screen and (max-width: 992px) {
    .Boton_pestana {
        border-radius: 6px 6px 0px 0px;
        font-size: 10px;
        width: 66px;
        margin-left:1px;
        }

}

    </style>
    <meta name="description" content="The description of my page" />
    @if (System.Configuration.ConfigurationManager.AppSettings["LogeoProduccion"] != "false")
    {
    <script>

        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-61006808-1', 'auto');
        ga('send', 'pageview');

    </script>
    }  

</head>
<body class="cuerpo-zona-alumno">
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")*@
    <div class="navbar navbar-inverse navbar-fixed-top" style="background-color:rgb(240, 240, 240);border:0px;">
        <div class="container">

            <a href="../UTP/Index"><img src="~/img/IDAT/logo.png" class="LogoUTPPE2" /></a>
            <div class="navbar-header posicion-menu">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse" style="margin: 3px 5px 3px 0px">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <div class="navbar-collapse collapse" style="border:0px;background-color:transparent;">
                <ul class="nav navbar-nav" style="margin-top: 11px;">
                    <li>
                        <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaIndex" href=@Url.Action("Index", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color: #669999">Mi Portal</a>
                    </li>
                    <li>
                        <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaEmpresa" href=@Url.Action("Empresas", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color: #669999">Empresas</a>
                    </li>
                    <li>
                        <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaAlumno" href=@Url.Action("Alumnos", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color: #669999">Alumnos</a>
                    </li>
                    <li>
                        <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaOfertas" href=@Url.Action("Ofertas", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color:#669999">Ofertas</a>
                    </li>
                    <li>
                        <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaEventos" href=@Url.Action("Eventos", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color: #669999">Eventos</a>
                    </li>
                    <li>
                        <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaReportes" href=@Url.Action("Reportes", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color: #669999">Reportes</a>
                    </li>
                    <li>
                        <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaPortal" href=@Url.Action("Portal", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color: #669999">Contenido</a>
                    </li>
                    @if (ViewBag.Rol != "ROLUTP")
                    {
                        <li>
                            <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaSistema" href=@Url.Action("Sistema", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color: #669999">Sistema</a>
                        </li>
                    }                   
                    <li>
                        <a class="btn btn-default navbar-btn Boton_pestana" id="PestañaConvenios" href=@Url.Action("Convenios", "UTP") style="padding: 2px 0px 2px 0px; color: white; background-color: #669999">Convenios</a>
                    </li>

                </ul>
                @Html.Partial("MenuIntra")
            </div>
            <div id="divFinalCabecera" class="final-cabecera" style="background-color:#FF0000"></div>
        </div>
    </div>
    <!--<div class="container body-content">-->
    <div>
        @RenderBody()

        <footer>
            <div class="container">
                <div class="row">
                    <div class="span7" style="padding-left:5px;">
                        @Html.Partial("FooterIntra")
                        &nbsp;
                    </div>

                    <div id="footer_right" class="span4">


                    </div>
                </div>
            </div>
        </footer>
    </div>

    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")*@

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>





    <script src="~/Scripts/carga.asincrona.js"></script>
    <script>site.baseUrl = "@Url.Content("~/").TrimEnd('/')";</script>

    <!--El script calendario.js es necesario para mostrar las fechas en español y agrega una validación para las fechas en Chrome para que sean dd/mm/yyyy -->
    <script src="~/Scripts/calendario.js"></script>
    @*    @RenderSection("scripts", required: false)*@
</body>
</html>

<script>
    $(document).ready(function () {
        $('body').on('focus', ".datepicker", function () {
            $(this).datepicker({ dateFormat: 'dd/mm/yy' }).val();
        });
    });

    var EmpresaExportar = function () {
        console.log('EmpresaExportar');

        var data = {
            NombreComercial: $('#NombreComercial').val(),
            IdEstadoEmpresa: $('#IdEstadoEmpresa').val(),
            IdSector: $('#IdSector').val(),
            RazonSocial: $('#RazonSocial').val(),
            RUC: $('#RUC').val(),
            NroOferta: $('#NroOferta').val(),
            NroPostulante: $('#NroPostulante').val(),
            PalabraClave: $('#PalabraClave').val()
        };

        window.location.href = '@Url.Action("BusquedaEmpresasExportar", "UTP")?' + $.param(data, true);
    };

    var AlumnosExportar = function () {
        console.log('AlumnosExportar');

        var data = {
            TipoEstudio: $('#TipoEstudio').val(),
            Alumno: $('#Alumno').val(),
            Carrera: $('#Carrera').val(),
            Ciclo: $('#Ciclo').val(),
            Sexo: $('#Sexo').val(),
            Distrito: $('#Distrito').val(),
            SectorEmpresarial: $('#SectorEmpresarial').val(),
            Conocimientos: $('#Conocimiento').val(),
            EstadoEstudio: $('#EstadoEstudio').val(),
            completitud: $('#completitud').val(),
            PalabraClave: $('#PalabraClave').val()
        };

        window.location.href = '@Url.Action("BusquedaAlumnosExportar", "UTP")?' + $.param(data, true);
    };

    var OfertasExportar = function () {
        console.log('OfertasExportar');

        var data = {
            NombreComercial: $('#NombreComercial').val(),
            IdTipoCargoutp: $('#IdTipoCargoutp').val(),
            CargoOfrecido: $('#CargoOfrecido').val(),
            IdSectorutp: $('#IdSectorutp').val(),
            IdTipoContratoutp: $('#IdTipoContratoutp').val(),
            AExperiencia: $('#AExperiencia').val(),
            RemuneracionOfrecida: $('#RemuneracionOfrecida').val(),
            IdTipoEstudioutp: $('#IdTipoEstudioutp').val(),
            Conocimientos: $('#Conocimientos').val(),
            NumeroPostulante: $('#NumeroPostulante').val(),
            IdEstadoOferta: $('#IdEstadoOferta').val(),
            InformacionAdicional: $('#TipoConocimientoIdListaValor').val(),
            Carrera: $('#Carrera').val(),
            TipoTrabajoUTP: $('#TipoTrabajoUTP').val(),
            PalabraClave: $('#PalabraClave').val()
        };

        window.location.href = '@Url.Action("BusquedaOfertasExportar", "UTP")?' + $.param(data, true);
    };

    function CargarPOSTNull(id, link) {
        $.ajax({
            url: link,
            contentType: 'application/json; charset=utf-8',
            type: 'POST',
            dataType: 'html'
        })
        .success(function (result) {
            if (id != null) {
                $("#" + id).html(result);
            }
            ShowModal("#" + id);
        })
        .error(function (xhr, status) {
            console.log(xhr);
            console.log(status);

        })
    }

    function CargarPOST(id, link, entidad) {
        $.ajax({
            url: link,
            contentType: 'application/json; charset=utf-8',
            type: 'POST',
            data: JSON.stringify(entidad),
            dataType: 'html'
        })
        .success(function (result) {
            if (id != null) {
                $("#" + id).html(result);
            }
        })
        .error(function (xhr, status) {
            console.log(xhr);
            console.log(status);

        })
    }


    function CargarGET(id, link) {
        $.ajax({
            url: link,
            contentType: 'application/html; charset=utf-8',
            type: 'GET',
            dataType: 'html'

        })
        .success(function (result) {
            if (id != null) {
                $("#" + id).html(result);
            }
        })
        .error(function (xhr, status) {
            console.log(xhr.statusText);
            console.log(status);
        })
    }


    function AutoComplete(inputsearch, urlsearch, inputtext, inputid) {
        $(inputsearch).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: urlsearch,
                    data: "{ 'query': '" + request.term + "' }",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(data);
                            return {
                                value: item.Label,
                                id: item.Value
                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (even, ui) {
                $(inputid).val(ui.item.id);
                $(inputtext).val(ui.item.value);

                alert($(inputid).val());
                alert($(inputtext).val());

            }
        });
    }

    function AutoCompleteText(inputsearch, urlsearch, inputtext) {
        $(inputsearch).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: urlsearch,
                    data: "{ 'query': '" + request.term + "' }",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(data);
                            return {
                                value: item.Label,
                                id: item.Value
                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (even, ui) {
                $(inputtext).val(ui.item.value);

            }
        });
    }

    function AutoCompleteTextVarios(inputsearch, urlsearch, inputtext, tipo) {
        $(inputsearch).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: urlsearch,
                    data: "{ 'query': '" + request.term + "' }",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.Label,
                                id: item.Value
                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (even, ui) {
                $(inputtext).val(ui.item.value);
                if (tipo == "A") cargarDatosAlumno(ui.item.id);
                if (tipo == "E") cargarDescripcionEmpresa(ui.item.id);
                //console.log('seleccionado = ' + ui.item.id);
            }
        });
    }


    function AutoCompleteTextDemo(inputsearch, urlsearch, inputtext, combo) {
        $(inputsearch).autocomplete({
            source: function (request, response) {
                console.log(request);
                var codigoTipoConocimiento = $('#TipoConocimientoIdListaValor').val();
                $.ajax({
                    url: urlsearch,
                    data: "{ 'query': '" + request.term + "', 'codigoTipo': '" + codigoTipoConocimiento + "' }",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(data);
                            return {
                                value: item.Label,
                                id: item.Value
                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (even, ui) {
                $(inputtext).val(ui.item.value);

            }
        });
    }

    function AutoCompleteTextBuscarDescripcion(inputsearch, urlsearch, inputtext) {
        $(inputsearch).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: urlsearch,
                    data: "{ 'query': '" + request.term + "' }",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.Label,
                                id: item.Value
                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            },
            minLength: 1,
            select: function (even, ui) {
                $(inputtext).val(ui.item.value);
                $('#CodigoEmpresa').val(ui.item.id);
                cargarDescripcionLocacionEmpresa();
                console.log('seleccionado = ' + ui.item.id);
            }
        });

        
    }

    function cargarDescripcionLocacionEmpresa() {

        var idEmpresa = $('#CodigoEmpresa').val();

        $("#ListaUbicaciones").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("BuscarDatosEmpresasUTP","UTP")' + '?id=' + idEmpresa, // we are calling json method
            dataType: 'json',

            success: function (states) {
                // states contains the JSON formatted list
                // of states passed from the controller

                $("#ListaUbicaciones").append('<option selected value>-Seleccione-</option>');

                $.each(states, function (i, state) {
                    $("#ListaUbicaciones").append('<option value="' + state.Value + '">' +
                        state.Text + '</option>');
                    // here we are adding option for States

                });
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });

    }

   
</script>


