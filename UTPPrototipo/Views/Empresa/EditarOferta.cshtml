@model UTP.PortalEmpleabilidad.Modelo.Oferta

@using UTP.PortalEmpleabilidad.Modelo;

@{
    Layout = "~/Views/Empresa/_LayoutEmpresa.cshtml";
    ViewBag.Title = "Nueva Oferta Laboral";
}


<div class="container fuente-pequeña" style="margin-top:2px;">

    @{Html.RenderAction("VistaCabecera", "Empresa");}

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <!--Se guardar los Id's en archivos temporales-->
        @Html.HiddenFor(model => model.IdOferta)
        @Html.HiddenFor(model => model.IdEmpresa)
        @Html.HiddenFor(model => model.CreadoPor)
        @Html.HiddenFor(model => model.UsuarioPropietarioEmpresa)
        <div class="panel-group" id="oferta-cabecera" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default fuente-pequeña">
                <div class="panel-heading" role="tab" id="headingOfertaCabecera" style="padding: 2px 2px 2px 6px;">
                    <h5 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseOfertaCabecera" aria-expanded="true" aria-controls="collapseOfertaCabecera" class="fuente-seccion">
                            Edición de Oferta Laboral
                        </a>
                    </h5>
                </div>
                <div id="collapseOfertaCabecera" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOfertaCabecera">
                    <div class="panel-body">
                        <div class="row">

                            
                            <div class="col-sm-3" style="border-right:solid;border-right-color:lightgray;border-right-width:1px;text-align:center;">
                                <span>Defina como desea recibir notificaciones via correo electrónico, por cada Postulación.</span>
                                <br />
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        (*) Correos
                                    </span>
                                    @Html.DropDownListFor(m => m.RecibeCorreosIdListaValor, null, "- Seleccione forma de Notificación -", htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.RecibeCorreosIdListaValor, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-3" style="border-right:solid;border-right-color:lightgray;border-right-width:1px;text-align:center;">
                                <span>Si ha finalizado la edición de su Oferta laboral, entonces Publíquela.</span>
                                <br />

                                @Html.HiddenFor(m => m.EstadoOferta)
                                @{
        if (Model.EstadoOferta == "OFERCO") //Estado en construcción.
        {
                        <span id="lblPublicarOferta" class="btn btn-default color-paleta2">Publicar</span>
        }
        else
        {
                        <span>Oferta pendiente de activación</span>
        }
                                }
                            </div>

                            <div class="col-sm-3" style="border-right:solid;border-right-color:lightgray;border-right-width:1px;text-align:center;">
                                <span>Visualice como los Postulantes verán su Oferta Laboral</span>
                                <br />
                                @*@Html.ActionLink("Vista Previa", "MostrarOferta", new { id = Model.IdOferta }, htmlAttributes: new { @class = "btn btn-default color-paleta2", @target = "_blank", @title = "Vista previa de la oferta" })*@
                                @Html.ActionLink("Vista Previa", "MostrarOferta", new { id = Model.IdOferta }, htmlAttributes: new { @class = "btn btn-default color-paleta2", @title = "Vista previa de la oferta" })
                            </div>
                         
                            <div class="col-sm-3" style="border-right:solid;border-right-color:lightgray;border-right-width:1px;text-align:center;">
                                <span>Guarde las modificaciones que ha realizado sobre su Oferta.</span>
                                <br />
                                <button class="btn btn-default color-paleta2" style="margin-bottom:5px;">Guardar</button>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <script src="~/Scripts/ckeditor/ckeditor.js"></script>

        <div id="divDescripcionOferta" class="row">

            <div class="col-sm-6">

                <div class="panel-group" id="oferta-anuncio" role="tablist" aria-multiselectable="true">
                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab" id="headingOferta" style="padding: 2px 2px 2px 6px;">
                            <h5 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseOferta" aria-expanded="true" aria-controls="collapseOferta" class="fuente-seccion">
                                    Descripción de la Oferta
                                </a>
                            </h5>
                        </div>
                        <div id="collapseOferta" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOferta">
                            <div class="panel-body fuente-pequeña">
                                <div class="input-group">
                                    <span class="input-group-addon">(*) Cargo</span>
                                    @*<input id="CargoOfrecido" data-val="true" data-val-required="No ha ingresado el campo" name="CargoOfrecido" type="text" class="form-control" placeholder="Nombre del cargo a publicar" value="@Model.CargoOfrecido">*@
                                    @Html.TextBoxFor(m => m.CargoOfrecido, new { @class = "form-control",@id = "Cargo", @placeholder = "Nombre del cargo a publicar" })

                                    @*<input class="text-box single-line" id="CargoOfrecido" name="CargoOfrecido" type="text" value="">*@
                                    @*@Html.EditorFor(model => model.CargoOfrecido, new { @class = "form-control" })*@
                                </div>
                                @Html.ValidationMessageFor(m => m.CargoOfrecido, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <span class="input-group-addon">(*)<br />Funciones</span>
                                    @*<textarea class="form-control" rows="2"></textarea>*@
                                    <textarea name="Funciones" id="Funciones" rows="2" cols="80">@Html.Raw(@Model.Funciones)</textarea>

                                </div>
                                @Html.ValidationMessageFor(m => m.Funciones, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <span class="input-group-addon">Información<br />Adicional</span>
                                    @*<textarea class="form-control" rows="2"></textarea>*@
                                    <textarea name="Competencias" id="Competencias" rows="2" cols="80">@Html.Raw(@Model.Competencias)</textarea>

                                </div>
                                @Html.ValidationMessageFor(m => m.Competencias, "", new { @class = "text-danger" })
                                <br />

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <script>
                CKEDITOR.replace('Funciones', { height: 75 });
                CKEDITOR.replace('Competencias', { height: 74 });
            </script>

            <div class="col-sm-6">

                <div class="panel-group" id="oferta-condiciones" role="tablist" aria-multiselectable="true">
                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab" id="headingDetalle" style="padding: 2px 2px 2px 6px;">
                            <h5 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseDetalle" aria-expanded="true" aria-controls="collapseDetalle" class="fuente-seccion">
                                    Condiciones de la Oferta
                                </a>
                            </h5>
                        </div>
                        <div id="collapseDetalle" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetalle">
                            <div class="panel-body fuente-pequeña">
                                <div class="input-group">
                                    <span class="input-group-addon">Recibir<br />CVs hasta</span>
                                    @*@Html.TextBoxFor(m => m.FechaFinRecepcionCV, new { @class = "form-control", @placeholder = "Fecha final de Recepcion de CVs" })*@
                                    @*@Html.Raw(@Html.EditorFor(m => m.FechaFinRecepcionCV).ToString().Replace("text-box single-line", "form-control"))*@
                                    @Html.TextBoxFor(m => m.FechaFinRecepcionCV, new { @class = "form-control", @placeholder = "Fecha de fin de publicación", @Value = Model.FechaFinRecepcionCV.ToString("d") })
                                </div>
                                @Html.ValidationMessageFor(m => m.FechaFinRecepcionCV, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <span class="input-group-addon">Área</span>
                                    @*<input id="AreaEmpresa" name="AreaEmpresa" type="text" class="form-control" placeholder="Área o división de la empresa" value="@Model.AreaEmpresa">*@

                                    @Html.TextBoxFor(m => m.AreaEmpresa, new { @class = "form-control", @placeholder = "Área o división de la empresa", @id="AreaEmpresa"})
                                </div>
                                @Html.ValidationMessageFor(m => m.AreaEmpresa, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <span class="input-group-addon">Tipo de<br />Cargo</span>
                                    @Html.DropDownListFor(m => m.TipoCargoIdListaValor, null, "- Seleccione Tipo de Cargo -", htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.TipoCargoIdListaValor, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <span class="input-group-addon">(*) Tipo de<br />Trabajo</span>
                                    @Html.DropDownListFor(m => m.TipoTrabajoIdListaValor, null, "- Seleccione Tipo de Trabajo -", htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.TipoTrabajoIdListaValor, "", new { @class = "text-danger" })

                                <div class="input-group">
                                    <span class="input-group-addon">Tipo de<br />Contrato</span>
                                    @Html.DropDownListFor(m => m.TipoContratoIdListaValor, null, "- Seleccione Tipo de Contrato -", htmlAttributes: new { @class = "form-control" })

                                </div>
                                @Html.ValidationMessageFor(m => m.TipoContratoIdListaValor, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <span class="input-group-addon">Duración<br />en meses</span>
                                    @*<input id="DuracionContrato" name="DuracionContrato" type="text" class="form-control" placeholder="Vacio si es indeterminada" value="@Model.DuracionContrato">*@
                                    @Html.TextBoxFor(m => m.DuracionContrato, new { @class = "form-control", @placeholder = "Vacío si es indeterminada" })
                                </div>
                                @Html.ValidationMessageFor(m => m.DuracionContrato, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <span class="input-group-addon">Horario</span>
                                    @*<input id="Horario" name="Horario" type="text" class="form-control" placeholder="Ej: De Lunes a Viernes de 9:00am a 6:00pm" value="@Model.Horario">*@
                                    @Html.TextBoxFor(m => m.Horario, new { @class = "form-control", @placeholder = "Ej: De Lunes a Viernes de 9:00am a 6:00pm" })
                                </div>
                                @Html.ValidationMessageFor(m => m.Horario, "", new { @class = "text-danger" })
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="input-group">
                                            <span class="input-group-addon">(*) Sueldo <br />mínimo S/.</span>
                                            @Html.TextBoxFor(m => m.RemuneracionOfrecida, new { @class = "form-control", @placeholder = "Sueldo mínimo" })
                                        </div>
                                        @Html.ValidationMessageFor(m => m.RemuneracionOfrecida, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="input-group">
                                            <span class="input-group-addon">(*) Sueldo <br />máximo S/.</span>
                                            @Html.TextBoxFor(m => m.RemuneracionOfrecidaHasta, new { @class = "form-control", @placeholder = "Sueldo máximo" })
                                        </div>
                                        @Html.ValidationMessageFor(m => m.RemuneracionOfrecidaHasta, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="input-group">
                                            <span class="input-group-addon">(*) Vacantes</span>
                                            @*<input id="NumeroVacantes" name="NumeroVacantes" type="text" class="form-control" placeholder="Número de vacantes para el puesto" value="@Model.NumeroVacantes">*@
                                            @Html.TextBoxFor(m => m.NumeroVacantes, new { @class = "form-control", @placeholder = "Número de vacantes para el puesto" })
                                        </div>
                                        @Html.ValidationMessageFor(m => m.NumeroVacantes, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                
                                

                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="input-group">
                                            <span class="input-group-addon">(*)<br />Ubicación</span>
                                            @Html.DropDownListFor(m => m.IdEmpresaLocacion, null, "- Seleccione Ubicación -", htmlAttributes: new { @class = "form-control" })

                                        </div>
                                        @Html.ValidationMessageFor(m => m.IdEmpresaLocacion, "", new { @class = "text-danger" })
                                    </div>
                                    @*<div class="col-sm-5 fuente-pequeña" style="text-align:right;">
                                            <button class="btn btn-default color-paleta2">Nueva Ubicación</button>
                                        </div>*@
                                </div>

                                <br />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }

    <script>

    $(document).ready(function () {
        $("#divFinalCabecera").removeClass("color-paleta1 color-paleta2 color-paleta4 color-paleta5").addClass("color-paleta3");
        AutoCompleteText('#Cargo', '@Url.Action("ListarCargo", "Empresa")', '#Cargo');
        AutoCompleteText('#AreaEmpresa', '@Url.Action("ListarAreasEmpresa", "Alumno")', '#AreaEmpresa');
    });

    </script>

    <div class="row">

        <div id="ofertaRequisitos" class="col-sm-6">
            <div class="panel-group" id="oferta-requisito" role="tablist" aria-multiselectable="true">
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="headingRequisito" style="padding: 2px 2px 2px 6px;">
                        <h5 class="panel-title">
                            <a data-toggle="collapse" data-parent="#oferta-requisito" href="#collapseRequisito" aria-expanded="true" aria-controls="collapseRequisito" class="fuente-seccion">
                                Requisitos de la Oferta
                            </a>
                        </h5>
                    </div>
                    <div id="collapseRequisito" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingRequisito">
                        <div class="panel-body fuente-pequeña">
                            <div id="divListaEstudios">
                                @Html.Action("ObtenerEstudios", "OfertaEstudio", new { idOferta = Model.IdOferta })
                            </div>
                            <hr />

                            <div id="divListaSectores">
                                @Html.Action("ObtenerSectoresEmpresariales", "OfertaSectorEmpresarial", new { idOferta = Model.IdOferta })
                            </div>
                            <hr />

                            <div id="divListaInfoAdicional">
                                @Html.Action("ObtenerInformacionAdicional", "OfertaInformacionAdicional", new { idOferta = Model.IdOferta })
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="ofertaFases" class="col-sm-6">


            @using (Ajax.BeginForm("_OfertaFaseEditar", "Empresa", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divFases", OnComplete = "alertTemporal" }))
            {
                @Html.AntiForgeryToken()

                <div id="divFases">
                    @Html.Action("ObtenerOfertaFase", "Empresa", new { idOferta = Model.IdOferta })

                </div>
            }

        </div>

    </div>






</div>



@*<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@



<!--Bloque de modales-->
<!--Modal de estudio Crear-->
<div class="modal" id="divModalEstudio" tabindex="-1" role="dialog" aria-labelledby="Estudio" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaEstudioCrear", "OfertaEstudio", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaEstudios", OnComplete = "cerrarModal", OnFailure = "mostrarError" }))
    {
        @Html.AntiForgeryToken()

        <div id="divCrearEstudioContenedor" class="modal-dialog">

        </div>
    }
</div>

<!--Modal de sector empresarial-->
<div class="modal" id="divModalSectorEmpresarial" tabindex="-1" role="dialog" aria-labelledby="ExperienciaLaboral" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaSectorEmpresarialCrear", "OfertaSectorEmpresarial", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaSectores", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divCrearSectorEmpresarialContenedor" class="modal-dialog">

        </div>
    }

</div>

<!--Modal de infomación adicional-->
<div class="modal" id="divModalInfoAdicional" tabindex="-1" role="dialog" aria-labelledby="Estudio" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaInformacionAdicionalCrear", "OfertaInformacionAdicional", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaInfoAdicional", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divCrearInfoAdicionalContenedor" class="modal-dialog">

        </div>
    }

</div>

<!--Modal de estudio Editar-->
<div class="modal" id="divEditarModalEstudio" tabindex="-1" role="dialog" aria-labelledby="Estudio" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaEstudioEditar", "OfertaEstudio", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaEstudios", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divEditarEstudioContenedor" class="modal-dialog">

        </div>
    }
</div>

<!--Modal edición de sector empresarial-->
<div class="modal" id="divEditarModalSectorEmpresarial" tabindex="-1" role="dialog" aria-labelledby="ExperienciaLaboral" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaSectorEmpresarialEditar", "OfertaSectorEmpresarial", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaSectores", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divEditarSectorEmpresarialContenedor" class="modal-dialog">

        </div>
    }

</div>

<!--Modal de edición de infomación adicional-->
<div class="modal" id="divEditarModalInfoAdicional" tabindex="-1" role="dialog" aria-labelledby="Estudio" aria-hidden="true">

    @using (Ajax.BeginForm("_OfertaInformacionAdicionalEditar", "OfertaInformacionAdicional", new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "divListaInfoAdicional", OnComplete = "cerrarModal" }))
    {
        @Html.AntiForgeryToken()

        <div id="divEditarInfoAdicionalContenedor" class="modal-dialog">

        </div>
    }

</div>

<!--Bloque de javascript-->



<script>
    $(document).ready(function () {
        $("#divFinalCabeceraEmpresa").removeClass("color-paleta1 color-paleta3 color-paleta4 color-paleta5").addClass("color-paleta2");
        $('#PestañaOfertas').css('backgroundColor', '#f00');
        @*AutoCompleteText('#estudio', '@Url.Action("ListarTipoEstudio", "Empresa")', '#estudio');*@



        //Click para publicar una oferta:
        $('#lblPublicarOferta').on('click', function () {

            //Se obtiene el valor de IdOferta
            var idOferta = document.getElementById('IdOferta').value;
            var pantalla = '@Constantes.MENSAJES_EMPRESA_OFERTA';
            //Se envía una confirmación.
            if (confirm('¿Está seguro de publicar la oferta?')) {
                var url = '@Url.Action("FinalizarOferta", "Oferta")' + "?idOferta=" + idOferta + '&estado=OFERPR' + '&pantalla=' + pantalla; //Se envía el estado Pendiente de Activación.

                $.get(url, function (data) {
                    alert("La oferta ha sido publicada y está pendiente de activación por UTP");

                    $('#lblPublicarOferta').html("Oferta publicada")
                    $('#lblPublicarOferta').attr("disabled", "disabled"); //Se deshabilita el botón.

                }).error(function (err)  //Se muestran los errores en la consola.
                {
                    console.log(err);
                    //alert(err);
                });
            }
        });



        //checkSupportForInputTypeDate();
        $("#FechaFinRecepcionCV").datepicker({ dateFormat: 'dd/mm/yy' });


    });

    //Scripts de creación.
    //$('#btnNuevoEstudiossss').click(function () {

    //    var url = "../OfertaEstudio/_OfertaEstudioCrear"; // el url del controlador
    //    $.get(url, function (data) {
    //        $('#divCrearEstudioContenedor').html(data);
    //        $('#divModalEstudio').modal('show');
    //    });
    //});

    function crearEstudio(idOferta) {
        //debugger;
        //var url = "../../OfertaEstudio/_OfertaEstudioCrear/" + idOferta; // el url del controlador

        var url = '@Url.Action("_OfertaEstudioCrear", "OfertaEstudio")' + "/" + idOferta;
        //debugger;
        $.get(url, function (data) {

            $('#divCrearEstudioContenedor').html(data);
            $.validator.unobtrusive.parse('#divCrearEstudioContenedor');
            $('#divModalEstudio').modal('show');
        }).error(function (err) { console.log(err); alert(err); });
    };

    function crearSector(idOferta) {
        //var url = "../OfertaSectorEmpresarial/_OfertaSectorEmpresarialCrear/" + idOferta; // el url del controlador

        var url = '@Url.Action("_OfertaSectorEmpresarialCrear", "OfertaSectorEmpresarial")' + "/" + idOferta;

        $.get(url, function (data) {
            $('#divCrearSectorEmpresarialContenedor').html(data);
            $.validator.unobtrusive.parse('#divCrearSectorEmpresarialContenedor');
            $('#divModalSectorEmpresarial').modal('show');
        });
    }

    //$('#btnNuevoSectorEmpresarial').click(function () {

    //    var url = "../OfertaSectorEmpresarial/_OfertaSectorEmpresarialCrear"; // el url del controlador
    //    $.get(url, function (data) {
    //        $('#divCrearSectorEmpresarialContenedor').html(data);
    //        $('#divModalSectorEmpresarial').modal('show');
    //    });
    //});

    function crearInfoAdicional(idOferta) {
        //debugger;
        //var url = "../OfertaInformacionAdicional/_OfertaInformacionAdicionalCrear/" + idOferta; // el url del controlador

        var url = '@Url.Action("_OfertaInformacionAdicionalCrear", "OfertaInformacionAdicional")' + "/" + idOferta;

        $.get(url, function (data) {
            $('#divCrearInfoAdicionalContenedor').html(data);
            $.validator.unobtrusive.parse('#divCrearInfoAdicionalContenedor');
            $('#divModalInfoAdicional').modal('show');
        });
    }

    //$('#btnNuevaInfoAdicional').click(function () {

    //    var url = "../OfertaInformacionAdicional/_OfertaInformacionAdicionalCrear"; // el url del controlador
    //    $.get(url, function (data) {
    //        $('#divCrearInfoAdicionalContenedor').html(data);
    //        $('#divModalInfoAdicional').modal('show');
    //    });
    //});

    //Scripts para actualizar.
    //$('.btnEditarEstudio22').click(function () {
    //    debugger;
    //    var url = "../OfertaEstudio/_OfertaEstudioEditar"; // el url del controlador
    //    var id = $(this).attr('data-id'); // el id del botón.
    //    $.get(url + '/' + id, function (data) {
    //        $('#divEditarEstudioContenedor').html(data);
    //        $('#divEditarModalEstudio').modal('show');
    //    });
    //});

    function editarEstudio(id) {

        //var url = "../OfertaEstudio/_OfertaEstudioEditar"; // el url del controlador

        var url = '@Url.Action("_OfertaEstudioEditar", "OfertaEstudio")' + "/" + id;

        $.get(url, function (data) {
            console.log(data);
            $('#divEditarEstudioContenedor').html(data);
            $.validator.unobtrusive.parse('#divEditarEstudioContenedor');
            $('#divEditarModalEstudio').modal('show');
        }).error(function (err) { console.log(err); } );
    };

    function editarSector(id) {

        //var url = "../OfertaSectorEmpresarial/_OfertaSectorEmpresarialEditar"; // el url del controlador

        var url = '@Url.Action("_OfertaSectorEmpresarialEditar", "OfertaSectorEmpresarial")' + "/" + id;

        $.get(url, function (data) {
            $('#divEditarSectorEmpresarialContenedor').html(data);
            $.validator.unobtrusive.parse('#divEditarSectorEmpresarialContenedor');
            $('#divEditarModalSectorEmpresarial').modal('show');
        });
    };

    function editarInfoAdicional(id) {

        //var url = "../OfertaInformacionAdicional/_OfertaInformacionAdicionalEditar"; // el url del controlador

        var url = '@Url.Action("_OfertaInformacionAdicionalEditar", "OfertaInformacionAdicional")' + "/" + id;

        $.get(url, function (data) {
            $('#divEditarInfoAdicionalContenedor').html(data);
            $.validator.unobtrusive.parse('#divEditarInfoAdicionalContenedor');
            $('#divEditarModalInfoAdicional').modal('show');
        });
    };

    //Eliminaciones
    function eliminarEstudio(idOfertaEstudio) {

        if (confirm('Está seguro de eliminar el registro?')) {
            //debugger;
            //var url = "../OfertaEstudio/_OfertaEstudioEliminar/" + idOfertaEstudio; // el url del controlador
            var url = '@Url.Action("_OfertaEstudioEliminar", "OfertaEstudio")' + "/" + idOfertaEstudio;
            $.get(url, function (data) {
                $('#divListaEstudios').html(data);
            });
        }
    };

    function eliminarSector(idOfertaSector) {

        if (confirm('Está seguro de eliminar el registro?')) {
            //var url = "../OfertaSectorEmpresarial/_OfertaSectorEmpresarialEliminar/" + idOfertaSector;
            var url = '@Url.Action("_OfertaSectorEmpresarialEliminar", "OfertaSectorEmpresarial")' + "/" + idOfertaSector;
            $.get(url, function (data) {
                $('#divListaSectores').html(data);

            });
        }
    };

    function eliminarInfoAdicional(idOfertaInfoAdicional) {

        if (confirm('Está seguro de eliminar el registro?')) {
            //var url = "../OfertaInformacionAdicional/_OfertaInformacionAdicionalEliminar/" + idOfertaInfoAdicional;
            var url = '@Url.Action("_OfertaInformacionAdicionalEliminar", "OfertaInformacionAdicional")' + "/" + idOfertaInfoAdicional;
            $.get(url, function (data) {
                $('#divListaInfoAdicional').html(data);
            });
        }
    };

    //Script para cerrar el modal cuando la actualización por ajax termina.
    function cerrarModal() {
        $('.modal.in').modal('hide');
    }

    function alertTemporal() {
        alert('Las Fases se guardaron con éxito');
    }

    function mostrarError(err)
    {
        console.log(err);
    }

</script>

@{
    //Se valida que exista mensaje de éxito al crear una oferta
    if (TempData["MsjExitoCrearOferta"] != null)
    {
        <input id="msjExitoCrearOferta" type="hidden" value="@TempData["MsjExitoCrearOferta"]" />
        TempData["MsjExitoCrearOferta"] = null; //Se establece el valor nuevamente en NULL.

        //Se muestra el script
        <script>

            var msjExito = document.getElementById("msjExitoCrearOferta").value;
            alert(msjExito);

        </script>
    }

}
